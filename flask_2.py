# -*- coding: utf-8 -*-
"""Flask 2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vF0dQawF4fbJH70mw77OOl-CEwjVplYy
"""

"""
ANS 1.

- **GET method**: The GET method is used to request data from a specified resource. It appends data to the URL and retrieves information from the server. It is commonly used to fetch and display data.
  Example: When visiting a website, the browser sends a GET request to retrieve the page.

- **POST method**: The POST method is used to send data to the server, usually for creating or updating resources. Unlike GET, POST sends data in the request body, making it more secure for transmitting sensitive information (e.g., form data).
  Example: When submitting a login form, the browser sends a POST request with the username and password.
"""

"""
Ans 2.

In Flask, the `request` object is used to access data from incoming HTTP requests. It contains information such as form data, query parameters, cookies, and request headers.
It allows the Flask application to access the data submitted by the client, either through GET or POST methods.

Example usage:
- `request.args`: Retrieves query parameters from the URL (GET request).
- `request.form`: Retrieves data submitted via POST request.
- `request.json`: Retrieves JSON data from the request body.
"""

"""
Ans 3.

The `redirect()` function in Flask is used to redirect the user to a different route or URL. It returns a response to the client that instructs the browser to navigate to the specified location, often with a status code of 302 (found).

Example usage:
- After form submission, a user can be redirected to a different page (like a "thank you" page).
  Example: `return redirect(url_for('thank_you'))`
"""

"""
Ans 4.

Templates in Flask are HTML files that allow dynamic content to be inserted into them. These templates are used to generate HTML pages that are returned to the client.

Flask uses the **Jinja2 template engine** to embed variables and logic into templates, making the pages dynamic.

The `render_template()` function is used to render HTML templates with dynamic data. It takes the name of the template and optional arguments (data) to pass into the template.

Example usage:
```python
from flask import render_template
@app.route('/')
def home():
    return render_template('index.html', name='Alice')


### ANS 5.

from flask import Flask, jsonify

app = Flask(__name__)

# Simple route to return a JSON response
@app.route('/api/hello', methods=['GET'])
def hello():
    return jsonify({"message": "Hello, World!"})

if __name__ == '__main__':
    app.run(debug=True)